@article{sigcomm2014ndn,
	Author = {Zhang, Lixia and Afanasyev, Alexander and Burke, Jeffrey and Jacobson, Van and claffy, kc and Crowley, Patrick and Papadopoulos, Christos and Wang, Lan and Zhang, Beichuan},
	Date-Added = {2017-05-13 23:37:17 +0000},
	Date-Modified = {2017-05-13 23:37:17 +0000},
	Journal = {ACM SIGCOMM Computer Communication Review (CCR)},
	Month = jul,
	Number = {3},
	Pages = {66--73},
	Title = {{Named Data Networking}},
	Volume = {44},
	Year = {2014},
	url = {http://doi.acm.org/10.1145/2656877.2656887},
}

@inproceedings{icn2019congestion,
	author = {Song, Sichen and Zhang, Lixia},
	title = {Effective NDN Congestion Control Based on Queue Size Feedback},
	year = {2022},
	isbn = {9781450392570},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3517212.3558088},
	abstract = {Named data networking (NDN) can improve the consumer data retrieval throughput with its built-in multicast data delivery, innetwork caching, and ability to support multi-path forwarding. However, their realization brings challenges. In this work, we first examine how multi-path forwarding and in-network caching can interfere with consumer measurements for congestion control. Based on the results, we propose a congestion control solution, NDN-QSF, that can work effectively in the presence of in-network caching. In NDN-QSF, forwarders estimate upstream bandwidth and use queue size as congestion feedback to inform downstream routers to limit interest transmission rates. We further adapt and extend NDN-QSF to enable routers to make informed multi-path forwarding decisions. We evaluated NDN-QSF through simulation experimentation and our results show that NDN-QSF can effectively control congestion by using queue size as congestion feedback and improve network throughput with multi-path forwarding.},
	booktitle = {Proceedings of the 9th ACM Conference on Information-Centric Networking},
	pages = {11--21},
	numpages = {11},
	keywords = {named data networking, congestion control, multi-path forwarding},
	location = {Osaka, Japan},
	series = {ICN '22}
}

@ARTICLE{ieeecomm2018security,
  author={Zhang, Zhiyi and Yu, Yingdi and Zhang, Haitao and Newberry, Eric and Mastorakis, Spyridon and Li, Yanbiao and Afanasyev, Alexander and Zhang, Lixia},
  journal={IEEE Communications Magazine},
  title={An Overview of Security Support in Named Data Networking},
  year={2018},
  volume={56},
  number={11},
  pages={62-68},
  url={https://doi.org/10.1109/MCOM.2018.1701147}
}

@INPROCEEDINGS{icccn2013ddos,
  author={Gasti, Paolo and Tsudik, Gene and Uzun, Ersin and Zhang, Lixia},
  booktitle={2013 22nd International Conference on Computer Communication and Networks (ICCCN)},
  title={DoS and DDoS in Named Data Networking},
  year={2013},
  volume={},
  number={},
  pages={1-7},
  doi={10.1109/ICCCN.2013.6614127}
}

@article{afanasyev2014nfd,
  title={NFD developer's guide},
  author={Afanasyev, Alexander and Shi, Junxiao and Zhang, Beichuan and Zhang, Lixia and Moiseenko, Ilya and Yu, Yingdi and Shang, Wentao and Huang, Yi and Abraham, Jerald Paul and DiBenedetto, Steve and others},
  journal={Dept. Comput. Sci., Univ. California, Los Angeles, Los Angeles, CA, USA, Tech. Rep. NDN-0021},
  volume={29},
  pages={31},
  year={2014},
  url={https://named-data.net/publications/techreports/nfd-developer-guide/}
}

@inproceedings{icn2021yanfd,
	author = {Newberry, Eric and Ma, Xinyu and Zhang, Lixia},
	title = {YaNFD: Yet Another Named Data Networking Forwarding Daemon},
	year = {2021},
	isbn = {9781450384605},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3460417.3482969},
	doi = {10.1145/3460417.3482969},
	abstract = {We have developed YaNFD as a new software packet forwarder for NDN. YaNFD achieves compatibility with existing NDN applications and forwarders, as well as high throughput. YaNFD features multi-threaded forwarding, a smaller and more streamlined codebase compared to existing implementations, and can be managed using existing NDN forwarder management utilities and protocols. In this paper, we discuss our implementation, including how it differs from previous forwarders based upon lessons learned during their development and use over the span of multiple years. Additionally, we present the lessons learned from our experience developing a new forwarder for NDN from the ground up.},
	booktitle = {Proceedings of the 8th ACM Conference on Information-Centric Networking},
	pages = {30--41},
	numpages = {12},
	keywords = {information-centric networking, named data networking, Forwarder design},
	location = {Paris, France},
	series = {ICN '21}
}

@inproceedings{icn2020dpdk,
	author = {Shi, Junxiao and Pesavento, Davide and Benmohamed, Lotfi},
	title = {NDN-DPDK: NDN Forwarding at 100 Gbps on Commodity Hardware},
	year = {2020},
	isbn = {9781450380409},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3405656.3418715},
	doi = {10.1145/3405656.3418715},
	abstract = {Since the Named Data Networking (NDN) data plane requires name-based lookup of potentially large tables using variable-length hierarchical names as well as per-packet state updates, achieving high-speed NDN forwarding remains a challenge. In order to address this gap, we developed a high-performance NDN router capable of reaching forwarding rates higher than 100 Gbps while running on commodity hardware. In this paper we present our design and discuss its tradeoffs. We achieved this performance through several optimization techniques that include adopting better algorithms and efficient data structures, as well as making use of the parallelism offered by modern multi-core CPUs and multiple hardware queues with user-space drivers for kernel bypass. Our open-source forwarder is the first software implementation of NDN to exceed 100 Gbps throughput while supporting the full protocol semantics. We also present the results of extensive benchmarking carried out to assess a number of performance dimensions and to diagnose the current bottlenecks in the packet processing pipeline for future scalability enhancements. Finally, we identify future work which includes hardware-assisted ingress traffic dispatching, dynamic load balancing across forwarding threads, and novel caching solutions to accommodate on-disk content stores.},
	booktitle = {Proceedings of the 7th ACM Conference on Information-Centric Networking},
	pages = {30--40},
	numpages = {11},
	keywords = {Software router, Information centric networking, Packet forwarding engine, NDN forwarder, Kernel bypass, Commodity hardware, Named data networking, Performance benchmarking, High-speed forwarding, Network performance},
	location = {Virtual Event, Canada},
	series = {ICN '20}
}

@inproceedings{icn2018ndnot,
	author = {Zhang, Zhiyi and Lu, Edward and Li, Yanbiao and Zhang, Lixia and Yu, Tianyuan and Pesavento, Davide and Shi, Junxiao and Benmohamed, Lotfi},
	title = {NDNoT: A Framework for Named Data Network of Things},
	year = {2018},
	isbn = {9781450359597},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3267955.3269019},
	doi = {10.1145/3267955.3269019},
	abstract = {The Named Data Networking (NDN) architecture provides simple solutions to the communication needs of Internet of Things (IoT) in terms of ease-of-use, security, and content delivery. To utilize the desirable properties of NDN architecture in IoT scenarios, we are working to provide an integrated framework, dubbed NDNoT, to support IoT over NDN. NDNoT provides solutions to auto configuration, service discovery, data-centric security, content delivery, and other needs of IoT application developers. Utilizing NDN naming conventions, NDNoT aims to create an open environment where IoT applications and different services can easily cooperate and work together. This poster introduces the basic components of our framework and explains how these components function together.},
	booktitle = {Proceedings of the 5th ACM Conference on Information-Centric Networking},
	pages = {200--201},
	numpages = {2},
	keywords = {internet of things, NDN},
	location = {Boston, Massachusetts},
	series = {ICN '18}
}

@inproceedings{icn2022tlv,
	author = {Ma, Xinyu and Afanasyev, Alexander and Zhang, Lixia},
	title = {A Type-Theoretic Model on NDN-TLV Encoding},
	year = {2022},
	isbn = {9781450392570},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3517212.3558093},
	doi = {10.1145/3517212.3558093},
	abstract = {In Named-Data Networking (NDN), all packets are encoded in the Type-Length-Value (TLV) format. TLV encoding and decoding are implemented in every NDN library, and used by all applications and forwarders. Therefore, formal analysis of TLV encoding can assist NDN software development in the simplification of the code base, analysis of the performance, and improvement of robustness.In this paper, we want to bring attention to the subtleties of TLV encoding. As an initial result, we develop a type-theoretical model of TLV encodable types, and give an algorithm to automatically derive encoding and decoding functions. We formally prove that the derived encoding and decoding functions are inverse to each other. To evaluate the practicality of automatically derived algorithms, we implement the proposed algorithms in C++ templates and evaluate them in three aspects: performance, memory usage, and code complexity. Our results show that our C++ library is competitive in these three aspects. Though our implementation is not fully automated, we show that it is possible to have a fully automated library in future that correctly produce the encoding and decoding functions. We also discussed the limitations of our model and problems worth attention. We hope our work can offer a starting point of further research on TLV, especially formal analysis and automated implementation.},
	booktitle = {Proceedings of the 9th ACM Conference on Information-Centric Networking},
	pages = {91--102},
	numpages = {12},
	keywords = {type-length-value format, encoding, information-centric networking, named data networking},
	location = {Osaka, Japan},
	series = {ICN '22}
}

@article{cc2013stateful,
	title = {A case for stateful forwarding plane},
	journal = {Computer Communications},
	volume = {36},
	number = {7},
	pages = {779-791},
	year = {2013},
	issn = {0140-3664},
	url = {https://doi.org/10.1016/j.comcom.2013.01.005},
	author = {Cheng Yi and Alexander Afanasyev and Ilya Moiseenko and Lan Wang and Beichuan Zhang and Lixia Zhang},
	keywords = {NDN, Forwarding plane, Adaptive forwarding},
	abstract = {In Named Data Networking (NDN), packets carry data names instead of source and destination addresses. This paradigm shift leads to a new network forwarding plane: data consumers send Interest packets to request desired data, routers forward Interest packets and maintain the state of all pending Interests, which is then used to guide Data packets back to the consumers. Maintaining the pending Interest state, together with the two-way Interest and Data exchange, enables NDN routers’ forwarding process to measure performance of different paths, quickly detect failures and retry alternative paths. In this paper we describe an initial design of NDN’s forwarding plane and evaluate its data delivery performance under adverse conditions. Our results show that this stateful forwarding plane can successfully circumvent prefix hijackers, avoid failed links, and utilize multiple paths to mitigate congestion. We also compare NDN’s performance with that of IP-based solutions to highlight the advantages of a stateful forwarding plane.}
}

@INPROCEEDINGS{iwqos2016asf,
  author={Lehman, Vince and Gawande, Ashlesh and Zhang, Beichuan and Zhang, Lixia and Aldecoa, Rodrigo and Krioukov, Dmitri and Wang, Lan},
  booktitle={2016 IEEE/ACM 24th International Symposium on Quality of Service (IWQoS)},
  title={An experimental investigation of hyperbolic routing with a smart forwarding plane in NDN},
  year={2016},
  volume={},
  number={},
  pages={1-10},
  doi={10.1109/IWQoS.2016.7590394}
}

@inproceedings{icn23lightversec,
 author = {Yu, Tianyuan and Ma, Xinyu and Xie, Hongcheng and Kocao\u{g}ullar, Yekta and Zhang, Lixia},
 title = {A New API in Support of NDN Trust Schema},
 year = {2023},
 isbn = {9798400704031},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 url = {https://doi.org/10.1145/3623565.3623709},
 doi = {10.1145/3623565.3623709},
 abstract = {The decade-long experiences from developing applications over Named Data Networking (NDN) have taught us the importance of well-designed libraries that offer support to application developers to support data security. NDN trust schema provides a critical component in the NDN security support, however its implementation and support only started receiving significant attention in recent years. This paper first provides a summary of the existing API support for trust schema, then takes a step forward by developing a new trust schema API, named Envelope. Envelope addresses the application requirements by offering comprehensive trust schema functionalities, an easy-to-write schema language, and an extensible design. To demonstrate the usefulness of Envelope, we develop a blog application which uses Envelope to secure its data. Our results show that Envelope provides effective trust schema support for applications with acceptable overhead.},
 booktitle = {Proceedings of the 10th ACM Conference on Information-Centric Networking},
 pages = {46–54},
 numpages = {9},
 keywords = {named data networking (NDN), trust schema, API, software engineering},
 location = {Reykjavik, Iceland},
 series = {ACM ICN '23}
}

@INPROCEEDINGS {metacomswo,
 author = {Yu, Tianyuan and Ma, Xinyu and Patil, Varun and Kocaogullar, Yekta and Zhang, Yulong and Burke, Jeff and Kutscher, Dirk and Zhang, Lixia},
 booktitle = {2024 IEEE International Conference on Metaverse Computing, Networking, and Applications (MetaCom)},
 title = {Secure Web Objects: Building Blocks for Metaverse Interoperability and Decentralization},
 year = {2024},
 volume = {},
 ISSN = {},
 pages = {25-33},
 doi = {10.1109/MetaCom62920.2024.00019},
 url = {https://doi.ieeecomputersociety.org/10.1109/MetaCom62920.2024.00019},
 publisher = {IEEE Computer Society},
 address = {Los Alamitos, CA, USA},
}
